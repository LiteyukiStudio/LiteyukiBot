import{_ as e,o as t,c as n,e as a}from"./app-0e_4pVFu.js";const o={},s=a(`<h3 id="def-on-get-data-tuple-str-dict-str-any-none" tabindex="-1"><a class="header-anchor" href="#def-on-get-data-tuple-str-dict-str-any-none"><span><em><strong>def</strong></em> <code>on_get(data: tuple[str, dict[str, Any]]) -&gt; None</code></span></a></h3><h3 id="def-on-set-data-tuple-str-dict-str-any-none" tabindex="-1"><a class="header-anchor" href="#def-on-set-data-tuple-str-dict-str-any-none"><span><em><strong>def</strong></em> <code>on_set(data: tuple[str, dict[str, Any]]) -&gt; None</code></span></a></h3><h3 id="def-on-delete-data-tuple-str-dict-str-any-none" tabindex="-1"><a class="header-anchor" href="#def-on-delete-data-tuple-str-dict-str-any-none"><span><em><strong>def</strong></em> <code>on_delete(data: tuple[str, dict[str, Any]]) -&gt; None</code></span></a></h3><h3 id="def-on-get-all-data-tuple-str-dict-str-any-none" tabindex="-1"><a class="header-anchor" href="#def-on-get-all-data-tuple-str-dict-str-any-none"><span><em><strong>def</strong></em> <code>on_get_all(data: tuple[str, dict[str, Any]]) -&gt; None</code></span></a></h3><h3 id="class-keyvaluestore" tabindex="-1"><a class="header-anchor" href="#class-keyvaluestore"><span><em><strong>class</strong></em> <code>KeyValueStore</code></span></a></h3><h3 id="def-set-self-any-key-str-value-any-none" tabindex="-1"><a class="header-anchor" href="#def-set-self-any-key-str-value-any-none"><span>  <em><strong>def</strong></em> <code>set(self: Any, key: str, value: Any) -&gt; None</code></span></a></h3><p> 设置键值对</p><p>Args:</p><pre><code>key: 键

value: 值
</code></pre><h3 id="def-get-self-any-key-str-default-optional-any-optional-any" tabindex="-1"><a class="header-anchor" href="#def-get-self-any-key-str-default-optional-any-optional-any"><span>  <em><strong>def</strong></em> <code>get(self: Any, key: str, default: Optional[Any]) -&gt; Optional[Any]</code></span></a></h3><p> 获取键值对</p><p>Args:</p><pre><code>key: 键

default: 默认值
</code></pre><p>Returns:</p><pre><code>Any: 值
</code></pre><h3 id="def-delete-self-any-key-str-ignore-key-error-bool-none" tabindex="-1"><a class="header-anchor" href="#def-delete-self-any-key-str-ignore-key-error-bool-none"><span>  <em><strong>def</strong></em> <code>delete(self: Any, key: str, ignore_key_error: bool) -&gt; None</code></span></a></h3><p> 删除键值对</p><p>Args:</p><pre><code>key: 键

ignore_key_error: 是否忽略键不存在的错误
</code></pre><p>Returns:</p><h3 id="def-get-all-self-any-dict-str-any" tabindex="-1"><a class="header-anchor" href="#def-get-all-self-any-dict-str-any"><span>  <em><strong>def</strong></em> <code>get_all(self: Any) -&gt; dict[str, Any]</code></span></a></h3><p> 获取所有键值对</p><p>Returns:</p><pre><code>dict[str, Any]: 键值对
</code></pre><h3 id="class-globalkeyvaluestore" tabindex="-1"><a class="header-anchor" href="#class-globalkeyvaluestore"><span><em><strong>class</strong></em> <code>GlobalKeyValueStore</code></span></a></h3><h3 id="classmethod" tabindex="-1"><a class="header-anchor" href="#classmethod"><span>  <em><strong>@classmethod</strong></em></span></a></h3><h3 id="def-get-instance-cls-any-none" tabindex="-1"><a class="header-anchor" href="#def-get-instance-cls-any-none"><span>  <em><strong>def</strong></em> <code>get_instance(cls: Any) -&gt; None</code></span></a></h3><p> </p><h3 id="attr-instance-none" tabindex="-1"><a class="header-anchor" href="#attr-instance-none"><span>  <em><strong>attr</strong></em> <code>_instance: None</code></span></a></h3><h3 id="attr-lock-threading-lock" tabindex="-1"><a class="header-anchor" href="#attr-lock-threading-lock"><span>  <em><strong>attr</strong></em> <code>_lock: threading.Lock()</code></span></a></h3>`,30),l=[s];function r(d,c){return t(),n("div",null,l)}const p=e(o,[["render",r],["__file","storage.html.vue"]]),y=JSON.parse('{"path":"/dev/api/comm/storage.html","title":"liteyuki.comm.storage","lang":"zh-CN","frontmatter":{"title":"liteyuki.comm.storage","order":1,"icon":"laptop-code","category":"API","description":"def on_get(data: tuple[str, dict[str, Any]]) -> None def on_set(data: tuple[str, dict[str, Any]]) -> None def on_delete(data: tuple[str, dict[str, Any]]) -> None def on_get_all(...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/dev/api/comm/storage.html"}],["meta",{"property":"og:site_name","content":"LiteyukiBot 轻雪机器人"}],["meta",{"property":"og:title","content":"liteyuki.comm.storage"}],["meta",{"property":"og:description","content":"def on_get(data: tuple[str, dict[str, Any]]) -> None def on_set(data: tuple[str, dict[str, Any]]) -> None def on_delete(data: tuple[str, dict[str, Any]]) -> None def on_get_all(..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-19T01:55:47.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-19T01:55:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"liteyuki.comm.storage\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-19T01:55:47.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"def on_get(data: tuple[str, dict[str, Any]]) -> None","slug":"def-on-get-data-tuple-str-dict-str-any-none","link":"#def-on-get-data-tuple-str-dict-str-any-none","children":[]},{"level":3,"title":"def on_set(data: tuple[str, dict[str, Any]]) -> None","slug":"def-on-set-data-tuple-str-dict-str-any-none","link":"#def-on-set-data-tuple-str-dict-str-any-none","children":[]},{"level":3,"title":"def on_delete(data: tuple[str, dict[str, Any]]) -> None","slug":"def-on-delete-data-tuple-str-dict-str-any-none","link":"#def-on-delete-data-tuple-str-dict-str-any-none","children":[]},{"level":3,"title":"def on_get_all(data: tuple[str, dict[str, Any]]) -> None","slug":"def-on-get-all-data-tuple-str-dict-str-any-none","link":"#def-on-get-all-data-tuple-str-dict-str-any-none","children":[]},{"level":3,"title":"class KeyValueStore","slug":"class-keyvaluestore","link":"#class-keyvaluestore","children":[]},{"level":3,"title":"def set(self: Any, key: str, value: Any) -> None","slug":"def-set-self-any-key-str-value-any-none","link":"#def-set-self-any-key-str-value-any-none","children":[]},{"level":3,"title":"def get(self: Any, key: str, default: Optional[Any]) -> Optional[Any]","slug":"def-get-self-any-key-str-default-optional-any-optional-any","link":"#def-get-self-any-key-str-default-optional-any-optional-any","children":[]},{"level":3,"title":"def delete(self: Any, key: str, ignore_key_error: bool) -> None","slug":"def-delete-self-any-key-str-ignore-key-error-bool-none","link":"#def-delete-self-any-key-str-ignore-key-error-bool-none","children":[]},{"level":3,"title":"def get_all(self: Any) -> dict[str, Any]","slug":"def-get-all-self-any-dict-str-any","link":"#def-get-all-self-any-dict-str-any","children":[]},{"level":3,"title":"class GlobalKeyValueStore","slug":"class-globalkeyvaluestore","link":"#class-globalkeyvaluestore","children":[]},{"level":3,"title":"@classmethod","slug":"classmethod","link":"#classmethod","children":[]},{"level":3,"title":"def get_instance(cls: Any) -> None","slug":"def-get-instance-cls-any-none","link":"#def-get-instance-cls-any-none","children":[]},{"level":3,"title":"attr _instance: None","slug":"attr-instance-none","link":"#attr-instance-none","children":[]},{"level":3,"title":"attr _lock: threading.Lock()","slug":"attr-lock-threading-lock","link":"#attr-lock-threading-lock","children":[]}],"git":{"createdTime":1724031826000,"updatedTime":1724032547000,"contributors":[{"name":"snowy","email":"snowykami@outlook.com","commits":2}]},"readingTime":{"minutes":0.57,"words":170},"filePathRelative":"dev/api/comm/storage.md","localizedDate":"2024年8月19日","autoDesc":true}');export{p as comp,y as data};
