import{_ as e,o as s,c as t,e as n}from"./app-vZ92a7EE.js";const i={},o=n(`<h3 id="class-event" tabindex="-1"><a class="header-anchor" href="#class-event"><span><em><strong>class</strong></em> <code>Event</code></span></a></h3><h3 id="def-init-self-type-str-data-dict-str-any-bot-id-str-session-id-str-session-type-str-receive-channel-str-none" tabindex="-1"><a class="header-anchor" href="#def-init-self-type-str-data-dict-str-any-bot-id-str-session-id-str-session-type-str-receive-channel-str-none"><span>  <em><strong>def</strong></em> <code>__init__(self, type: str, data: dict[str, Any], bot_id: str, session_id: str, session_type: str, receive_channel: str) -&gt; None</code></span></a></h3><p> 事件</p><p>Args:</p><pre><code>type: 类型

data: 数据

bot_id: 机器人ID

session_id: 会话ID

session_type: 会话类型

receive_channel: 接收频道
</code></pre><h3 id="def-reply-self-message-str-dict-str-any-none" tabindex="-1"><a class="header-anchor" href="#def-reply-self-message-str-dict-str-any-none"><span>  <em><strong>def</strong></em> <code>reply(self, message: str | dict[str, Any]) -&gt; None</code></span></a></h3><p> 回复消息</p><p>Args:</p><pre><code>message:
</code></pre><p>Returns:</p><h3 id="var-to-nonebot-event-event-type-self-session-type-data-message-message-bot-id-self-bot-id-session-id-self-session-id-session-type-self-session-type-receive-channel" tabindex="-1"><a class="header-anchor" href="#var-to-nonebot-event-event-type-self-session-type-data-message-message-bot-id-self-bot-id-session-id-self-session-id-session-type-self-session-type-receive-channel"><span><em><strong>var</strong></em> <code>to_nonebot_event = Event(type=self.session_type, data={&#39;message&#39;: message}, bot_id=self.bot_id, session_id=self.session_id, session_type=self.session_type, receive_channel=&#39;_&#39;)</code></span></a></h3>`,11),a=[o];function r(d,l){return s(),t("div",null,a)}const p=e(i,[["render",r],["__file","event.html.vue"]]),y=JSON.parse(`{"path":"/en/dev/api/message/event.html","title":"liteyuki.message.event","lang":"en-US","frontmatter":{"title":"liteyuki.message.event","order":1,"icon":"laptop-code","category":"API","description":"class Event def __init__(self, type: str, data: dict[str, Any], bot_id: str, session_id: str, session_type: str, receive_channel: str) -> None 事件 Args: def reply(self, message: ...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://vuepress-theme-hope-docs-demo.netlify.app/dev/api/message/event.html"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/en/dev/api/message/event.html"}],["meta",{"property":"og:site_name","content":"LiteyukiBot"}],["meta",{"property":"og:title","content":"liteyuki.message.event"}],["meta",{"property":"og:description","content":"class Event def __init__(self, type: str, data: dict[str, Any], bot_id: str, session_id: str, session_type: str, receive_channel: str) -> None 事件 Args: def reply(self, message: ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"liteyuki.message.event\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":3,"title":"class Event","slug":"class-event","link":"#class-event","children":[]},{"level":3,"title":"def __init__(self, type: str, data: dict[str, Any], bot_id: str, session_id: str, session_type: str, receive_channel: str) -> None","slug":"def-init-self-type-str-data-dict-str-any-bot-id-str-session-id-str-session-type-str-receive-channel-str-none","link":"#def-init-self-type-str-data-dict-str-any-bot-id-str-session-id-str-session-type-str-receive-channel-str-none","children":[]},{"level":3,"title":"def reply(self, message: str | dict[str, Any]) -> None","slug":"def-reply-self-message-str-dict-str-any-none","link":"#def-reply-self-message-str-dict-str-any-none","children":[]},{"level":3,"title":"var to_nonebot_event = Event(type=self.session_type, data={'message': message}, bot_id=self.bot_id, session_id=self.session_id, session_type=self.session_type, receive_channel='_')","slug":"var-to-nonebot-event-event-type-self-session-type-data-message-message-bot-id-self-bot-id-session-id-self-session-id-session-type-self-session-type-receive-channel","link":"#var-to-nonebot-event-event-type-self-session-type-data-message-message-bot-id-self-bot-id-session-id-self-session-id-session-type-self-session-type-receive-channel","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.31,"words":93},"filePathRelative":"en/dev/api/message/event.md","autoDesc":true}`);export{p as comp,y as data};
